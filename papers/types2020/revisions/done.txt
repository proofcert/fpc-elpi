pag 5: \caption{Specification of the checking of a proof certificate and the
  synthesis of a dependently typed $\lambda$-term.}

It's not a lambda calculus in so far it does not have variable sor abstraction. In general,  the caption does not read well

\caption{Implementation of a  dependent kernel for Coq terms.}
Again, inprecise: what is dependent? what coq terms?
[DONE]

-- If unify-eq works, reformulate inint and eq in the calculus to
apply modulo conversion (in which context???). In ref manual (page
16), reduction is defined as

E[Gamma] |- t |> u

Conversion as E[Γ] ⊢ t1 =_{βδιζη} t2 . defined as equi-reduction modulo eta-expansion
(and irrelevant (?) subterms)



Now we  say the local context is empty and
the global one is just Inductive, but coq.unify-eq must use these context
[DECIDED: empty if fine]

From manual:
A ** local context** is an ordered list of declarations of variables. The
declaration of a variable x is either an assumption, written x ∶ T
(where T is a type) or a definition, written x ∶= t ∶ T .

A **global environment** is an ordered list of declarations. Global
declarations are either assumptions, definitions or declarations of
inductive objects. assumptions are written as (c ∶ T ), indicating
that c is of the type T . Definitions are written as c ∶= t ∶ T 

-- add expert to sort rule in paper (Fig 1 and 2)
[DONE]


R1
- page 1: put some references for
"that has not been given a satisfactory representation in type theory"
and for
"have difficulty treating linear negation and the multiplicative disjunction"
[TODO DALE]
