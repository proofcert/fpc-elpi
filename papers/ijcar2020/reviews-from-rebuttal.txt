IJCAR 2020 review response (submission [*NUMBER*])

Dear Dale Miller,

Thank you for your submission to IJCAR 2020. The IJCAR 2020
rebuttal period will be between March 9 and March 12 (AoE).

During this time, you will have access to the current state of
your reviews and have the opportunity to submit a response.
Please keep in mind the following during this
process:

* The response must focus on any factual errors in the reviews
and any questions posed by the reviewers. It must not provide
new research results or reformulate the presentation. Try to be
as concise and to the point as possible.

* The rebuttal period is an opportunity to react to the
reviews, but not a requirement to do so. Thus, if you feel the
reviews are accurate and the reviewers have not asked any
questions, then you do not have to respond.

* The reviews are as submitted by the PC members, without any
coordination between them. Thus, there may be inconsistencies.
Furthermore, these are not the final versions of the reviews.
The reviews can later be updated to take into account the
discussions at the program committee meeting, and we may find
it necessary to solicit other outside reviews after the
rebuttal period.

* The program committee will read your responses carefully and
take this information into account during the discussions. On
the other hand, the program committee will not directly respond
to your responses, either before the program committee meeting
or in the final versions of the reviews.

* Your response will be seen by all PC members who have access
to the discussion of your paper, so please try to be polite and
constructive.

The reviews on your paper are attached to this letter. To
submit your response you should log on the EasyChair Web page
for IJCAR 2020 and select your submission on the menu.

----------------------- REVIEW 1 ---------------------
SUBMISSION: 122
TITLE: FPC-Coq: Using ELPI to elaborate external proof evidence into Coq proofs (System Description)
AUTHORS: Roberto Blanco, Matteo Manighetti and Dale Miller

----------- Overall evaluation -----------
SCORE: -2 (reject)
----- TEXT:

This paper describes a connection between Coq and a lambda-Prolog that
allows one to generate proof certificates externally and verify them
in Coq. Even as a short paper, it is not suitable for publication in
its present form.

Four out of the six pages are devoted to describing the FPC proof
format, which has been described in detail in other publications. So
the "new" part is only two pages.

The paper is virtually unreadable. It is hard to understand what has
been done. My understanding is that they have a Coq tactic that takes
a proof goal, exports to to an external mini-prover, which generates
an FPC certificate. Then the FPC certificate is imported back to Coq
via a deep embedding, and Coq uses a reflection theorem to turn it
into an ordinary proof. But I am only guessing: this is not made
clear.

The example, a proof of "(A -> B) -> A -> B", is singularly
unimpressive. Can the tool do something more complex? How long does it
take?

The last page and a half drops down to a smaller font. Why? To fit in
extra text? That is cheating.

The paper is very sloppily written. There are very many typographical
errors, spelling errors, grammatical errors, sentences that don't make
sense, and a missing citation. I wonder whether the authors even
proofread the paper.

I don't understand what is in the repository. The READMEs don't
provide any guidance. There is no information as to how to install the
system and its dependencies, or how to test anything. There are only a
couple of hundred lines of Coq code, and it is not clear what they
do. There are number of commits made after the submission deadline.


----------------------- REVIEW 2 ---------------------
SUBMISSION: 122
TITLE: FPC-Coq: Using ELPI to elaborate external proof evidence into Coq proofs (System Description)
AUTHORS: Roberto Blanco, Matteo Manighetti and Dale Miller

----------- Overall evaluation -----------
SCORE: 2 (accept)
----- TEXT:
Summary:

This paper describes system FPC-Coq that combines two systems: the
foundational proof certificate framework and the Coq proof
assistant. This allows for using Coq to check partial proofs that are
missing some detailed information and not formed by explicit
lambda-terms. This paper extends the FPC framework to allow for proof
focussing and for augmenting proofs with certificates (that may be
used to fill in the missing information in the proof term). 

Feedback and Questions:

+ The paper is well-written and easy to follow

+ The tool developed is exciting and seems potentially useful in proof
exchange between theorem provers. 

- The presented example (example 1) that uses the system is
  trivial. It leaves me wondering how easy it is to apply the system
  to realistic examples. 

* I am uncertain of the accuracy of the second sentence in the related
  work section. It states that this version of FPC-Coq only works for
  proving theorems in first order intuitionistic logic. Then continues
  to state that FPC-Coq can be used to prove the double negation of a
  formula for which there is a classical proof. Double negating a
  formula and finding an intuitionistic proof is only true for
  propositional logic and not first-order logic. First order negative
  translations are more involved (e.g. also double negating the body
  of each forall quantifier). Am I misunderstanding this paragraph, is
  this an error, or is there a justification for this that I am
  missing?

Further clarifications and typos:

- Section 2.1, could you please provide a short explanation why there
  are 101 introduction rules (and not 100)? 
- Section 2.1, it would be nice at the end of the section to go back
  to the example at the beginning and give the number of choices for
  this example using the focused proof system (with a short
  explanation). 
- Section 2.2: it may be helpful to explicitly state that decide and
  store are examples of experts and not necessarily part of every
  system. 
- There is a missing reference in the related work section [1,2, ?].


----------------------- REVIEW 3 ---------------------
SUBMISSION: 122
TITLE: FPC-Coq: Using ELPI to elaborate external proof evidence into Coq proofs (System Description)
AUTHORS: Roberto Blanco, Matteo Manighetti and Dale Miller

----------- Overall evaluation -----------
SCORE: 2 (accept)
----- TEXT:

The FPC-Coq system is built using Coq-ELPI that is a new Coq plugin
based on the ELPI implementation of λProlog. The foundational proof
certificate (FPC) framework is a system capable of checking and
elaborating a wide range of proof evidence and in FPC-Coq, it is
implemented using the logic programming language λProlog. The authors
propose the recently released Coq-ELPI plugin or Coq in which the ELPI
implementation of λProlog can send information to the Coq kernel.

Then it is possible to provide an additional procedure (by going
around Coq’s tactic language) for building and submitting formal
proofs to be checked by the Coq kernel. Thus, proof certificates
coming from external provers or from users can be converted to proofs
appropriate for the Coq kernel. Then, in this context, it is an
significant contribution to the FPC framework.

Section 2 presents the FPC framework with a focus on two problems with
attempting to use sequent proofs for theorem proving and proof
checking. The first is the lack of focus that is addressed in the
paper with a subsection dedicated to focused proof systems. The second
one is the way to determine from where missing information comes and
then another subsection considers how to augment the proof system with
certificates.  This section is well-written with enough details to
understand the questions and the approach followed by the authors and
its specificity. They are illustrated through some examples of FPC
specifications

Section 3 presents FPC-Coq and the way proposed to make Coq interact
with proof certificates. Moreover the Elpi extension for Coq allows
some facilities for building tactics written in λProlog.

This paper is a system description that is well written with enough
details about the design and the implementation and also with a
logical account of some steps.  It is a part of a more global project
that consists of using λProlog within a type theory setting, in
general, and within Coq, in particular.  The conversion of external
proof certificates to proofs appropriate for the Coq kernel is an
interesting and significant result and its implementation through
FPC-Coq will have an impact on some further formal proof developments.
Then I recommend to accept this system description.

Other comments:

p5. analisis -> analysis

P7. In related work paragraph a reference is missing [1,2,?]

------------------------------------------------------

Best wishes,

Nicolas Peltier
Viorica Sofronie-Stokkermans

