Title:
  FPC-Coq: Using ELPI to elaborate external proof evidence into Coq proofs

Authors:
  Roberto Blanco
  Matteo Manighetti
  Dale Miller

Abstract:

The trusted base of Coq is its kernel, which is used to certify that a given formula
has been proved. That kernel operates on a certain kind of
dependently typed lambda-term. The rest of the Coq system, especially its
tactic language, is designed to help a human user build
proofs-cum-lambda-terms that can be checked by the kernel.

Of course, there are many other kinds of theorem provers for
intuitionistic logic for which a completed proof is not the kind of
detailed lambda-term required by the Coq kernel but is, instead, a
trace of some key aspects of a proof: some proof details might not be
captured in that such a trace.

For example, substitution instances of quantifiers might not be
recorded in a proof since such instances can, in principle, be
reconstructed using unification.

Also, some simplifications might be applied within a proof without
there being a detailed trace of which lemmas were used since a shallow
non-deterministic proof-search engine can usually reconstruct the
detailed applications of lemmas.

We shall describe the FPC-Coq system which is capable to bridging the gap
between such high-level and partial proof evidence supplied by some
external prover and the specific needs of the Coq kernel.

This system makes extensive use of E. Tassi's Coq-ELPI, a new Coq plugin
based on lambda Prolog that provides an alternative to LTac.

Using the Foundational Proof Certificate (FPC) framework, we can
use the unification and backtracking mechanisms of lambda Prolog to
perform proof reconstruction in order to provide fully detailed proofs
as well as to transform the resulting proofs into the natural deduction
proofs needed by the Coq kernel.

As a result, we are able to have Coq check proof evidence
supplied by various external provers in such a way that we do not need
to trust either the external prover or the Coq-ELPI system.
