

@inproceedings{Maher88,
  author    = {Michael J. Maher},
  title     = {Complete Axiomatizations of the Algebras of Finite, Rational and Infinite
               Trees},
  booktitle = {{LICS}},
  pages     = {348--357},
  publisher = {{IEEE} Computer Society},
  year      = {1988}
}





@article{AnconaD15,
  author    = {Davide Ancona and
               Agostino Dovier},
  title     = {A Theoretical Perspective of Coinductive Logic Programming},
  journal   = {Fundam. Inform.},
  volume    = {140},
  number    = {3-4},
  pages     = {221--246},
  year      = {2015}
}


@inproceedings{Tarau19,
  author    = {Paul Tarau},
  title     = {A Combinatorial Testing Framework for Intuitionistic Propositional
               Theorem Provers},
  booktitle = {{PADL}},
  series    = {Lecture Notes in Computer Science},
  volume    = {11372},
  pages     = {115--132},
  publisher = {Springer},
  year      = {2019}
}


@inproceedings{BendkowskiGT17,
  author    = {Maciej Bendkowski and
               Katarzyna Grygiel and
               Paul Tarau},
  title     = {Boltzmann Samplers for Closed Simply-Typed Lambda Terms},
  booktitle = {{PADL}},
  series    = {Lecture Notes in Computer Science},
  volume    = {10137},
  pages     = {120--135},
  publisher = {Springer},
  year      = {2017}
}



@inproceedings{Tarau18,
  author    = {Paul Tarau},
  title     = {Declarative algorithms for generation, counting and random sampling
               of term algebras},
  booktitle = {{SAC}},
  pages     = {1203--1210},
  publisher = {{ACM}},
  year      = {2018}
}

@inproceedings{EinarsdottirJP18,
  author    = {S{\'{o}}lr{\'{u}}n Halla Einarsd{\'{o}}ttir and
               Moa Johansson and
               Johannes {\AA}man Pohjola},
  title     = {Into the Infinite - Theory Exploration for Coinduction},
  booktitle = {{AISC}},
  series    = {Lecture Notes in Computer Science},
  volume    = {11110},
  pages     = {70--86},
  publisher = {Springer},
  year      = {2018}
}

@inproceedings{AbelPTS13,
  author    = {Andreas Abel and
               Brigitte Pientka and
               David Thibodeau and
               Anton Setzer},
  title     = {Copatterns: programming infinite structures by observations},
  booktitle = {{POPL}},
  pages     = {27--38},
  publisher = {{ACM}},
  year      = {2013}
}
@article{HeathM19,
  author    = {Quentin Heath and
               Dale Miller},
  title     = {A Proof Theory for Model Checking},
  journal   = {J. Autom. Reasoning},
  volume    = {63},
  number    = {4},
  pages     = {857--885},
  year      = {2019}
}

@Article{Gacek2012,
author="Gacek, Andrew
and Miller, Dale
and Nadathur, Gopalan",
title="A Two-Level Logic Approach to Reasoning About Computations",
journal="Journal of Automated Reasoning",
year="2012",
month="Aug",
day="01",
volume="49",
number="2",
pages="241--273",
abstract="Relational descriptions have been used in formalizing diverse computational notions, including, for example, operational semantics, typing, and acceptance by non-deterministic machines. We therefore propose a (restricted) logical theory over relations as a language for specifying such notions. Our specification logic is further characterized by an ability to explicitly treat binding in object languages. Once such a logic is fixed, a natural next question is how we might prove theorems about specifications written in it. We propose to use a second logic, called a reasoning logic, for this purpose. A satisfactory reasoning logic should be able to completely encode the specification logic. Associated with the specification logic are various notions of binding: for quantifiers within formulas, for eigenvariables within sequents, and for abstractions within terms. To provide a natural treatment of these aspects, the reasoning logic must encode binding structures as well as their associated notions of scope, free and bound variables, and capture-avoiding substitution. Further, to support arguments about provability, the reasoning logic should possess strong mechanisms for constructing proofs by induction and co-induction. We provide these capabilities here by using a logic called {\$}{\{}{\backslash}cal G{\}}{\$}which represents relations over $\lambda$-terms via definitions of atomic judgments, contains inference rules for induction and co-induction, and includes a special generic quantifier. We show how provability in the specification logic can be transparently encoded in {\$}{\{}{\backslash}cal G{\}}{\$}. We also describe an interactive theorem prover called Abella that implements {\$}{\{}{\backslash}cal G{\}}{\$}and this two-level logic approach and we present several examples that demonstrate the efficacy of Abella in reasoning about computations.",
issn="1573-0670",
url="https://doi.org/10.1007/s10817-011-9218-1"
}


@InProceedings{baelde07cade,
  author =       "David Baelde and Andrew Gacek and Dale Miller and
                 Gopalan Nadathur and Alwen Tiu",
  title =        "The {Bedwyr} system for model checking over syntactic
                 expressions",
  booktitle =    cade07,
  pages =        "391--397",
  year =         "2007",
  editor =       "Frank Pfenning",
  number =       "4603",
  series =       lnai,
  publisher =    "Springer",
  URL =          "http://www.lix.polytechnique.fr/Labo/Dale.Miller/papers/cade2007.pdf",
  lixcategorie = "CIA",
  lixequipe =    "Parsifal Slimmer",
  x-pays =       "US,AU",
  aeres =        "Dummy Field",
  x-equipes =    "parsifal EXT",
  x-type =       "article",
  x-support =    "actes",
  x-cle-support = "CADE",
  x-editorial-board = "yes",
  x-proceedings = "yes",
  x-international-audience = "yes",
  x-invited-conference = "no",
  x-scientific-popularization = "no",
}

@inproceedings{Blanco0M19,
  author    = {Roberto Blanco and
               Dale Miller and
               Alberto Momigliano},
  title     = {Property-Based Testing via Proof Reconstruction},
  booktitle = {{PPDP}},
  pages     = {5:1--5:13},
  publisher = {{ACM}},
  year      = {2019}
}
@InCollection{Gim95types,
  author =	 "Eduardo Gim{\'e}nez",
  title =	 "Codifying Guarded Definitions with Recursion
                  Schemes",
  editor =	 "P. Dybjer and B. Nordstr{\"o}m",
  booktitle =	 "Selected Papers 2nd Int.\ Workshop on Types for
                  Proofs and Programs, TYPES'94, B{\aa}stad, Sweden, 6--10
                  June 1994",
  series =	 "Lecture Notes in Computer Science",
  volume =	 "996",
  pages =	 "39--59",
  publisher =	 "Springer-Verlag",
  address =	 "Berlin",
  year =	 "1994",
}


@Article{Paulson97,
  title =	 "Mechanizing Coinduction and Corecursion in
                  Higher-order Logic",
  author =	 "Lawrence C. Paulson",
  pages =	 "175--204",
  journal =	 "Journal of Logic and Computation",
  year =	 "1997",
  month =	 apr,
  volume =	 "7",
  number =	 "2",
  references =	 "\cite{JSYML::Church1940} \cite{LICS::Mendler1987}
                  \cite{TCS::MilnerT1991} \cite{TCS::Pitts1994}
                  \cite{TCS::Scott1993} \cite{IC::Tofte1990}",
}

@inproceedings{LagoR15,
  author    = {Ugo Dal Lago and
               Alessandro Rioli},
  title     = {Applicative Bisimulation and Quantum {\(\lambda\)}-Calculi},
  booktitle = {{FSEN}},
  series    = {Lecture Notes in Computer Science},
  volume    = {9392},
  pages     = {54--68},
  publisher = {Springer},
  year      = {2015}
}
@article{Tiu:2010,
 author = {Tiu, Alwen and Miller, Dale},
 title = {Proof Search Specifications of Bisimulation and Modal Logics for the pi-calculus},
 journal = {ACM Trans. Comput. Logic},
 issue_date = {January 2010},
 volume = {11},
 number = {2},
 month = jan,
 year = {2010},
 issn = {1529-3785},
 pages = {13:1--13:35},
 articleno = {13},
 numpages = {35},
 url = {http://doi.acm.org/10.1145/1656242.1656248},
 doi = {10.1145/1656242.1656248},
 acmid = {1656248},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {{\$\lambda\$}-tree syntax, \∇ quantifier, \π-calculus, Proof search, bisimulation, generic judgments, higher-order abstract syntax, modal logics},
}

@InProceedings{symbolic,
author="Basu, Samik
and Mukund, Madhavan
and Ramakrishnan, C. R.
and Ramakrishnan, I. V.
and Verma, Rakesh",
editor="Codognet, Philippe",
title="Local and Symbolic Bisimulation Using Tabled Constraint Logic Programming",
booktitle="Logic Programming",
year="2001",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="166--180",
abstract="Bisimulation is a fundamental notion that characterizes behavioral equivalence of concurrent systems. In this paper, we study the problem of encoding efficient bisimulation checkers for finite- as well as infinite-state systems as logic programs. We begin with a straightforward andshort (less than 10 lines) encoding of finite-state bisimulation checker as a tabledlogic program. In a goal-directedsystem like XSB, this encoding yields a local bisimulation checker: one where state space exploration is done only until a dissimilarity is revealed. More importantly, the logic programming formulation of local bisimulation can be extended to do symbolic bisimulation for checking the equivalence of infinite-state concurrent systems representedb y symbolic transition systems. We show how the two variants of symbolic bisimulation (late andearly equivalences) can be formulatedas a tabledconstrain t logic program in a way that precisely brings out their differences. Finally, we show that our symbolic bisimulation checker actually outperforms non-symbolic checkers even for relatively small finite-state systems.",
isbn="978-3-540-45635-3"
}



@InProceedings{CAAL,
author="Andersen, Jesper R.
and Andersen, Nicklas
and Enevoldsen, S{\o}ren
and Hansen, Mathias M.
and Larsen, Kim G.
and Olesen, Simon R.
and Srba, Jir{\'i}
and Wortmann, Jacob K.",
editor="Leucker, Martin
and Rueda, Camilo
and Valencia, Frank D.",
title="CAAL: Concurrency Workbench, Aalborg Edition",
booktitle="Theoretical Aspects of Computing - ICTAC 2015",
year="2015",
publisher="Springer International Publishing",
address="Cham",
pages="573--582",
abstract="We present the first official release of Caal, a web-based tool for modelling and verification of concurrent processes. The tool is primarily designed for educational purposes and it supports the classical process algebra CCS together with its timed extension TCCS. It allows to compare processes with respect to a range of strong/weak and timed/untimed equivalences and preorders (bisimulation, simulation and traces) and supports model checking of CCS/TCCS processes against recursively defined formulae of Hennessy-Milner logic. The tool offers a graphical visualizer for displaying labelled transition systems, including their minimization up to strong/weak bisimulation, and process behaviour can be examined by playing (bi)simulation and model checking games or via the generation of distinguishing formulae for non-equivalent processes. We describe the modelling and analysis features of Caal, discuss the underlying verification algorithms and show a typical example of a use in the classroom environment.",
isbn="978-3-319-25150-9"
}



@article{MantadelisRM14,
  author    = {Theofrastos Mantadelis and
               Ricardo Rocha and
               Paulo Moura},
  title     = {Tabling, Rational Terms, and Coinduction Finally Together!},
  journal   = {{TPLP}},
  volume    = 14,
  number    = {4-5},
  pages     = {429--443},
  year      = 2014
}
@article{Baelde12,
  author    = {David Baelde},
  title     = {Least and Greatest Fixed Points in Linear Logic},
  journal   = {{ACM} Trans. Comput. Log.},
  volume    = {13},
  number    = {1},
  pages     = {2:1--2:44},
  year      = {2012}
}
@inproceedings{HeathM15,
  author    = {Quentin Heath and
               Dale Miller},
  title     = {A framework for proof certificates in finite state exploration},
  booktitle = {PxTP@CADE},
  series    = {{EPTCS}},
  volume    = {186},
  pages     = {11--26},
  year      = {2015}
}
@article{DBLP:journals/cl/Ancona13,
  author    = {Davide Ancona},
  title     = {Regular corecursion in Prolog},
  journal   = {Computer Languages, Systems {\&} Structures},
  volume    = {39},
  number    = {4},
  pages     = {142--162},
  year      = {2013}
}
@inproceedings{JaffarSV04,
  author    = {Joxan Jaffar and
               Andrew E. Santosa and
               Razvan Voicu},
  title     = {A {CLP} Proof Method for Timed Automata},
  booktitle = {{RTSS}},
  pages     = {175--186},
  publisher = {{IEEE} Computer Society},
  year      = {2004}
}
@article{KomendantskayaL17,
  author    = {Ekaterina Komendantskaya and
               Yue Li},
  title     = {Productive corecursion in logic programming},
  journal   = {{TPLP}},
  volume    = {17},
  number    = {5-6},
  pages     = {906--923},
  year      = {2017}
}

@inproceedings{BasoldKL19,
  author    = {Henning Basold and
               Ekaterina Komendantskaya and
               Yue Li},
  title     = {Coinduction in Uniform: Foundations for Corecursive Proof Search with
               Horn Clauses},
  booktitle = {{ESOP}},
  series    = {Lecture Notes in Computer Science},
  volume    = {11423},
  pages     = {783--813},
  publisher = {Springer},
  year      = {2019}
}
@article{Gordon95,
  author    = {Andrew D. Gordon},
  title     = {Bisimilarity as a theory of functional programming},
  journal   = {Electr. Notes Theor. Comput. Sci.},
  volume    = {1},
  pages     = {232--252},
  year      = {1995}
}
@article{kozen_silva_2017, title={Practical coinduction}, volume={27}, DOI={10.1017/S0960129515000493}, number={7}, journal={Mathematical Structures in Computer Science}, publisher={Cambridge University Press}, author={Kozen, Dexter And Silva, Alexandra}, year={2017}, pages={1132–1152}}

@article{milner91tcs,
	author = {Robin Milner and Mads Tofte},
	title = {Co-induction in Relational Semantics},
	journal = {Theoretical Computer Science},
	year = {1991},
	volume = {87},
	number = {1},
	pages = {209--220},

}


@article{2007-Leroy-Grall,
  author = {Xavier Leroy and Hervé Grall},
  title = {Coinductive big-step operational semantics},
  journal = {Information and Computation},
  volume = 207,
  number = 2,
  pages = {284--304},
  year = 2009,
  url = {http://gallium.inria.fr/~xleroy/publi/coindsem-journal.pdf},
  urlpublisher = {http://dx.doi.org/10.1016/j.ic.2007.12.004},
  hal = {http://hal.inria.fr/inria-00309010/},
  abstract = {Using a call-by-value functional language as an example, this
article
illustrates the use of coinductive definitions and proofs in big-step
operational semantics, enabling it to describe diverging evaluations
in addition to terminating evaluations.  We formalize the connections
between the coinductive big-step semantics and the standard small-step
semantics, proving that both semantics are equivalent.  We then study
the use of coinductive big-step semantics in proofs of type soundness
and proofs of semantic preservation for compilers.
A methodological originality of this paper is that all results
have been proved using the Coq proof assistant.  We explain the
proof-theoretic presentation of coinductive definitions and proofs
offered by Coq, and show that it facilitates the discovery and the
presentation of the results.},
  pubkind = {journal-int-mono}
}

@InProceedings{Luke07,
author="Simon, Luke
and Bansal, Ajay
and Mallya, Ajay
and Gupta, Gopal",
editor="Arge, Lars
and Cachin, Christian
and Jurdzi{\'{n}}ski, Tomasz
and Tarlecki, Andrzej",
title="Co-Logic Programming: Extending Logic Programming with Coinduction",
booktitle="Automata, Languages and Programming",
year="2007",
publisher="Springer Berlin Heidelberg",
pages="472--483",
abstract="In this paper we present the theory and practice of co-logic programming (co-LP for brevity), a paradigm that combines both inductive and coinductive logic programming. Co-LP is a natural generalization of logic programming and coinductive logic programming, which in turn generalizes other extensions of logic programming, such as infinite trees, lazy predicates, and concurrent communicating predicates. Co-LP has applications to rational trees, verifying infinitary properties, lazy evaluation, concurrent LP, model checking, bisimilarity proofs, etc.",
isbn="978-3-540-73420-8"
}

@inproceedings{CharatonikMNPW98,
  author    = {Witold Charatonik and
               David A. McAllester and
               Damian Niwinski and
               Andreas Podelski and
               Igor Walukiewicz},
  title     = {The Horn Mu-calculus},
  booktitle = {{LICS}},
  pages     = {58--69},
  publisher = {{IEEE} Computer Society},
  year      = {1998}
}




@article{Dagnino19,
  author    = {Francesco Dagnino},
  title     = {Coaxioms: flexible coinductive definitions by inference systems},
  journal   = {Logical Methods in Computer Science},
  volume    = {15},
  number    = {1},
  year      = {2019}
}



@article{AnconaDZ17,
  author    = {Davide Ancona and
               Francesco Dagnino and
               Elena Zucca},
  title     = {Reasoning on divergent computations with coaxioms},
  journal   = {Proc. {ACM} Program. Lang.},
  volume    = {1},
  number    = {{OOPSLA}},
  pages     = {81:1--81:26},
  year      = {2017}
}

@InProceedings{maher88lics,
  author =       "Michael J. Maher",
  title =        "Complete Axiomatizations of the Algebras of Finite
                 Rational and Infinite Trees",
  booktitle =    "3nd Symp.\ on Logic in Computer Science",
  pages =        "348--357",
  year =         "1988",
}

@Article{gacek11ic,
  author =       "Andrew Gacek and Dale Miller and Gopalan Nadathur",
  title =        "Nominal abstraction",
  journal =      "Information and Computation",
  year =         "2011",
  volume =       "209",
  number =       "1",
  pages =        "48--73",
  doi =          "10.1016/j.ic.2010.09.004",
  pdf =          "http://arxiv.org/abs/0908.1390",
}
@inproceedings{abelVezzosi:aplas14,
  author =	 {Andreas Abel and Andrea Vezzosi},
  title =	 {A Formalized Proof of Strong Normalization for
                  Guarded Recursive Types},
  booktitle =	 aplas14,
  pages =	 {140--158},
  year =	 2014,
  crossref =	 {DBLP:conf/aplas/2014},
  url =		 {http://dx.doi.org/10.1007/978-3-319-12736-1_8},
  doi =		 {10.1007/978-3-319-12736-1_8},
  timestamp =	 {Wed, 15 Oct 2014 15:39:11 +0200},
  biburl =	 {http://dblp.uni-trier.de/rec/bib/conf/aplas/AbelV14},
  bibsource =	 {dblp computer science bibliography, http://dblp.org}
}
@proceedings{DBLP:conf/aplas/2014,
  editor =	 {Jacques Garrigue},
  title =	 aplas14,
  series =	 lncs,
  volume =	 8858,
  publisher =	 springer,
  year =	 2014,
  url =		 {http://dx.doi.org/10.1007/978-3-319-12736-1},
  doi =		 {10.1007/978-3-319-12736-1},
  timestamp =	 {Wed, 15 Oct 2014 15:34:47 +0200},
  biburl =	 {http://dblp.uni-trier.de/rec/bib/conf/aplas/2014},
  bibsource =	 {dblp computer science bibliography, http://dblp.org}
}
